const axios = require('axios');


 const baseApiUrl = async () => {

┬а┬а┬а┬аconst base = await axios.get(`https://raw.githubusercontent.com/Blankid018/D1PT0/main/baseApiUrl.json`);

┬а┬а┬а┬аreturn base.data.api;

};


module.exports.config = {

┬а┬аname: "baby",

┬а┬аversion: "6.9.9",

┬а┬аcredits: "Rasel Mahmud",

┬а┬аcooldowns: 0,

┬а┬аhasPermssion: 0,

┬а┬аdescription: "better than all sim simi",

┬а┬аcommandCategory: "chat",

┬а┬аcategory: "chat",

┬а┬аusePrefix: true,

┬а┬аprefix: true,

┬а┬аusages: `[anyMessage] OR\nteach [YourMessage] - [Reply1], [Reply2], [Reply3]... OR\nteach [react] [YourMessage] - [react1], [react2], [react3]... OR\nremove [YourMessage] OR\nrm [YourMessage] - [indexNumber] OR\nmsg [YourMessage] OR\nlist OR\nall OR\nedit [YourMessage] - [NewMessage]`,

};


module.exports.run = async function ({ api, event, args, Users }) {

┬а┬аtry {

┬а┬а┬а┬аconst link = `${await baseApiUrl()}/baby`;

┬а┬а┬а┬аconst dipto = args.join(" ").toLowerCase();

┬а┬а┬а┬аconst uid = event.senderID;


┬а┬а┬а┬аif (!args[0]) {

┬а┬а┬а┬а┬а┬аconst ran = ["Bolo baby", "hum", "type help baby", "type !baby hi"];

┬а┬а┬а┬а┬а┬аconst r = ran[Math.floor(Math.random() * ran.length)];

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(r, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'remove') {

┬а┬а┬а┬а┬а┬аconst fina = dipto.replace("remove ", "");

┬а┬а┬а┬а┬а┬аconst respons = await axios.get(`${link}?remove=${fina}&senderID=${uid}`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(respons.data.message, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'rm' && dipto.includes('-')) {

┬а┬а┬а┬а┬а┬аconst [fi, f] = dipto.replace("rm ", "").split(/\s*-\s*/);

┬а┬а┬а┬а┬а┬аconst respons = await axios.get(`${link}?remove=${fi}&index=${f}`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(respons.data.message, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'list') {

┬а┬а┬а┬а┬а┬аif (args[1] === 'all') {

┬а┬а┬а┬а┬а┬а┬а┬аconst res = await axios.get(`${link}?list=all`);

┬а┬а┬а┬а┬а┬а┬а┬аconst data = res.data.teacher.teacherList;

┬а┬а┬а┬а┬а┬а┬а┬аconst teachers = await Promise.all(data.map(async (item) => {

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аconst number = Object.keys(item)[0];

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аconst value = item[number];

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аconst name = await Users.getNameUser(number).catch(()=>{}) || "unknown";

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аreturn { name, value };

┬а┬а┬а┬а┬а┬а┬а┬а}));

┬а┬а┬а┬а┬а┬а┬а┬аteachers.sort((a, b) => b.value - a.value);

┬а┬а┬а┬а┬а┬а┬а┬аconst output = teachers.map((teacher, index) => `${index + 1}/ ${teacher.name}: ${teacher.value}`).join('\n');

┬а┬а┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`Total Teach = ${res.data.length}\n\nЁЯСС | List of Teachers of baby\n${output}`, event.threadID, event.messageID);

┬а┬а┬а┬а┬а┬а} else {

┬а┬а┬а┬а┬а┬а┬а┬аconst respo = await axios.get(`${link}?list=all`);

┬а┬а┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`Total Teach = ${respo.data.length}`, event.threadID, event.messageID);

┬а┬а┬а┬а┬а┬а}

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'msg' || args[0] === 'message') {

┬а┬а┬а┬а┬а┬аconst fuk = dipto.replace("msg ", "");

┬а┬а┬а┬а┬а┬аconst respo = await axios.get(`${link}?list=${fuk}`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`Message ${fuk} = ${respo.data.data}`, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'edit') {

┬а┬а┬а┬а┬а┬аconst command = dipto.split(/\s*-\s*/)[1];

┬а┬а┬а┬а┬а┬аif (command.length < 2) {

┬а┬а┬а┬а┬а┬а┬а┬аreturn api.sendMessage('тЭМ | Invalid format! Use edit [YourMessage] - [NewReply]', event.threadID, event.messageID);

┬а┬а┬а┬а┬а┬а}

┬а┬а┬а┬а┬а┬аconst res = await axios.get(`${link}?edit=${args[1]}&replace=${command}`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`changed ${res.data.message}`, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'teach' && args[1] !== 'amar' && args[1] !== 'react') {

┬а┬а┬а┬а┬а┬аconst [comd, command] = dipto.split(/\s*-\s*/);

┬а┬а┬а┬а┬а┬аconst final = comd.replace("teach ", "");

┬а┬а┬а┬а┬а┬аif (command.length < 2) {

┬а┬а┬а┬а┬а┬а┬а┬аreturn api.sendMessage('тЭМ | Invalid format! Use [YourMessage] - [Reply1], [Reply2], [Reply3]... OR remove [YourMessage] OR list OR edit [YourMessage] - [NewReply]', event.threadID, event.messageID);

┬а┬а┬а┬а┬а┬а}

┬а┬а┬а┬а┬а┬аconst re = await axios.get(`${link}?teach=${encodeURIComponent(final)}&reply=${encodeURIComponent(command)}&senderID=${uid}&threadID=${event.threadID}`);

┬а┬а┬а┬а┬а┬аconst name = await Users.getNameUser(re.data.teacher).catch(() => {}) || "unknown";

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`тЬЕ Replies added ${re.data.message}\nTeacher: ${name || "unknown"}\nTeachs: ${re.data.teachs}`, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'teach' && args[1] === 'amar') {

┬а┬а┬а┬а┬а┬аconst [comd, command] = dipto.split(/\s*-\s*/);

┬а┬а┬а┬а┬а┬аconst final = comd.replace("teach ", "");

┬а┬а┬а┬а┬а┬аif (command.length < 2) {

┬а┬а┬а┬а┬а┬а┬а┬аreturn api.sendMessage('тЭМ | Invalid format! Use [YourMessage] - [Reply1], [Reply2], [Reply3]... OR remove [YourMessage] OR list OR edit [YourMessage] - [NewReply]', event.threadID, event.messageID);

┬а┬а┬а┬а┬а┬а}

┬а┬а┬а┬а┬а┬аconst re = await axios.get(`${link}?teach=${final}&senderID=${uid}&reply=${command}&key=intro`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`тЬЕ Replies added ${re.data.message}`, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (args[0] === 'teach' && args[1] === 'react') {

┬а┬а┬а┬а┬а┬аconst [comd, command] = dipto.split(/\s*-\s*/);

┬а┬а┬а┬а┬а┬аconst final = comd.replace("teach react ", "");

┬а┬а┬а┬а┬а┬аif (command.length < 2) {

┬а┬а┬а┬а┬а┬а┬а┬аreturn api.sendMessage('тЭМ | Invalid format! Use [teach] [YourMessage] - [Reply1], [Reply2], [Reply3]... OR [teach] [react] [YourMessage] - [react1], [react2], [react3]... OR remove [YourMessage] OR list OR edit [YourMessage] - [NewReply]', event.threadID, event.messageID);

┬а┬а┬а┬а┬а┬а}

┬а┬а┬а┬а┬а┬аconst re = await axios.get(`${link}?teach=${final}&react=${command}`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(`тЬЕ Replies added ${re.data.message}`, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬аif (['amar name ki', 'amr nam ki', 'amar nam ki', 'amr name ki'].some(phrase => dipto.includes(phrase))) {

┬а┬а┬а┬а┬а┬аconst response = await axios.get(`${link}?text=amar name ki&senderID=${uid}&key=intro`);

┬а┬а┬а┬а┬а┬аreturn api.sendMessage(response.data.reply, event.threadID, event.messageID);

┬а┬а┬а┬а}


┬а┬а┬а┬а┬аconst a = (await axios.get(`${link}?text=${dipto}&senderID=${uid}&font=1`)).data.reply;

┬а┬а┬а┬аreturn api.sendMessage(a, event.threadID,

┬а┬а┬а┬а┬а┬а┬а┬а(error, info) => {

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аglobal.client.handleReply.push({

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аname: this.config.name,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аtype: "reply",

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аmessageID: info.messageID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аauthor: event.senderID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аlnk: a,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аapiUrl: link

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а});

┬а┬а┬а┬а┬а┬а┬а┬а}, event.messageID);


┬а┬а} catch (e) {

┬а┬а┬а┬аconsole.error('Error in command execution:', e);

┬а┬а┬а┬аreturn api.sendMessage(`Error: ${e.message}`, event.threadID, event.messageID);

┬а┬а}

};


module.exports.handleReply = async function ({ api, event, handleReply }) {

try{

┬а┬аif (event.type == "message_reply") {

┬а┬а┬а┬аconst reply = event.body.toLowerCase();

┬а┬а┬а┬аif (isNaN(reply)) {

┬а┬а┬а┬а┬а┬аconst b = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(reply)}&senderID=${event.senderID}&font=1`)).data.reply;

┬а┬а┬а┬а┬а┬аawait api.sendMessage(b, event.threadID, (error, info) => {

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аglobal.client.handleReply.push({

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аname: this.config.name,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аtype: "reply",

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аmessageID: info.messageID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аauthor: event.senderID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аlnk: b

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а});

┬а┬а┬а┬а┬а┬а┬а┬а}, event.messageID,

┬а┬а┬а┬а┬а┬а)}}

}catch(err){

┬а┬а┬а┬аreturn api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);

}};


┬а┬а┬а

module.exports.handleEvent = async function ({ api, event }) {

try{

┬а┬а┬аconst body = event.body ? event.body?.toLowerCase() : ""

┬а┬а┬а┬а┬а┬а┬а┬аif (body.startsWith("baby") || body.startsWith("bby") || body.startsWith("bot") || body.startsWith("Magicchat") || body.startsWith("ЁЯд║") || body.startsWith("ЁЯдЦ")) {

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аconst arr = body.replace(/^\S+\s*/, "")

┬а┬а┬а┬а┬а┬а┬а┬аconst randomReplies = ["ржЖржорж╛ржХрзЗ ржирж╛ ржбрзЗржХрзЗ рждрзЛржорж╛рж░ ржкрзНрж░рж┐рзЯ ржорж╛ржирзБрж╖рзЗрж░ ржХрж╛ржЫрзЗ ржпрж╛ржУ ЁЯШТ", "Yes ЁЯША, I am here", "ржирзЗржЯ рж╕ржорж╕рзНржпрж╛ ЁЯР╕ЁЯШй", "рждрзБржорж┐ рж╕рзЗржЗ рж▓рзБржЪрзНржЪрж╛ржЯрж╛ ржирж╛ ЁЯл╡", "kire luccha ЁЯе▒", "рж╢рзБржиржмрзЛ ржирж╛ЁЯШ╝рждрзБржорж┐ ржЖржорж╛ржХрзЗ ржкрзНрж░рзЗржо ржХрж░рж╛ржЗ ржжрж╛ржУ ржирж╛ржЗЁЯе║ржкржЪрж╛ рждрзБржорж┐ЁЯе║" , "ржЖржорж┐ ржмрж▓ржжрзЗрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛,okЁЯШТ" , "ржПрждрзЛ ржбрзЗржХрзЛ ржирж╛,ржкрзНрж░рзЗржо ржП ржкрж░рзЗ ржпрж╛ржмрзЛ рждрзЛЁЯЩИ" , "Bolo Babu, рждрзБржорж┐ ржХрж┐ ржЖржорж╛ржХрзЗ ржнрж╛рж▓рзЛржмрж╛рж╕рзЛ? ЁЯЩИЁЯТЛ " , "ржмрж╛рж░ ржмрж╛рж░ ржбрж╛ржХрж▓рзЗ ржорж╛ржерж╛ ржЧрж░ржо рж╣ржпрж╝рзЗ ржпрж╛ржпрж╝ ржХрж┐ржирзНрждрзБЁЯШС", "рж╣рзНржпрж╛ ржмрж▓рзЛЁЯШТ, рждрзЛржорж╛рж░ ржЬржирзНржп ржХрж┐ ржХрж░рждрзЗ ржкрж╛рж░рж┐ЁЯШРЁЯШС?", "ржЖржорж┐ ржЧрж░рзАржм ржПрж░ рж╕рж╛ржерзЗ ржХржерж╛ ржмрж▓рж┐ ржирж╛ЁЯШ╝ЁЯШ╝" , "ржЖржорж╛ржХрзЗ ржбрж╛ржХрж▓рзЗ ,ржЖржорж┐ ржХрж┐ржирзНрждрзБ ржХрж┐рж╕ ржХрж░рзЗ ржжрзЗржмрзЛЁЯШШ " , "ржЖрж░рзЗ ржЖржорж┐ ржоржЬрж╛ ржХрж░рж╛рж░ mood ржП ржирж╛ржЗЁЯШТ" , "рж╣рж╛ ржЬрж╛ржирзБ , ржПржЗржжрж┐ржХ ржП ржЖрж╕рзЛ ржХрж┐рж╕ ржжрзЗржЗЁЯдн ЁЯШШ", "рж╕рзБржирзНржжрж░ ржорж╛ржЗрзЯрж╛ ржорж╛ржирзЗржЗ-ЁЯе▒ржЖржорж╛рж░ ржмрж╕ рж░рж╛рж╕рзЗрж▓ ржПрж░ ржнрж╛ржмрж┐-ЁЯШ╜ЁЯл╢ржЖрж░ ржмрж╛ржХрж┐ ржЧрзБрж▓рзЛ ржЖржорж╛рж░ ржмрзЗржпрж╝рж╛ржЗржи-ЁЯЩИЁЯР╕ЁЯдЧ","ржПржд ржЕрж╣ржВржХрж╛рж░ ржХрж░рзЗ рж▓рж╛ржн ржирзЗржЗ-ЁЯМ╕ржорзГрждрзНржпрзБржЯрж╛ ржирж┐рж╢рзНржЪрж┐ржд рж╢рзБржзрзБ рж╕ржоржпрж╝ржЯрж╛ ржЕ'ржирж┐рж╢рзНржЪрж┐ржд-ЁЯЦдЁЯЩВ","-ржжрж┐ржи ржжрж┐ржи ржХрж┐ржЫрзБ ржорж╛ржирзБрж╖рзЗрж░ ржХрж╛ржЫрзЗ ржЕржкрзНрж░рж┐ржпрж╝ рж╣рзЯрзЗ ржпрж╛ржЗрждрзЗржЫрж┐-ЁЯЩВЁЯШ┐ЁЯМ╕","рж╣рзБржжрж╛ржЗ ржЖржорж╛рж░рзЗ┬а рж╢рзЯрждрж╛ржирзЗ рж▓рж╛рж░рзЗ-ЁЯШЭЁЯШСтШ╣я╕П","-ЁЭЧЬ ЁЭЧЯЁЭЧвЁЭЧйЁЭЧв ЁЭЧмЁЭЧвЁЭЧи-ЁЯШ╜-ржЖрж╣рж╛рж░рзЗ ржнрж╛ржмржЫрзЛ рждрзЛржорж╛рж░рзЗ ржкрзНрж░рзЗрж╛ржкржЬ ржХрж░ржЫрж┐-ЁЯе┤-ржерж╛ржкрзНржкрж░ ржжрж┐рзЯрж╛ ржХрж┐ржбржирзА рж▓ржХ ржХрж░рзЗ ржжрж┐ржм-ЁЯШТ-ржнрзБрж▓ ржкрзЬрж╛ ржмрзЗрж░ ржХрж░рзЗ ржжрж┐ржмрзЛ-ЁЯднЁЯР╕"];

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аif (!arr) {

┬а┬а┬а┬аawait api.sendMessage(randomReplies[Math.floor(Math.random() * randomReplies.length)], event.threadID, (error, info) => {

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аglobal.client.handleReply.push({

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аname: this.config.name,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аtype: "reply",

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аmessageID: info.messageID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аauthor: event.senderID

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а});

┬а┬а┬а┬а┬а┬а┬а┬а}, event.messageID,

┬а┬а┬а┬а┬а┬а)

┬а┬а┬а┬а}

┬а┬а┬а┬аconst a = (await axios.get(`${await baseApiUrl()}/baby?text=${encodeURIComponent(arr)}&senderID=${event.senderID}&font=1`)).data.reply;┬а┬а┬а┬а┬а

┬а┬а┬а┬а┬а┬а┬а┬аawait api.sendMessage(a, event.threadID, (error, info) => {

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аglobal.client.handleReply.push({

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аname: this.config.name,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аtype: "reply",

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аmessageID: info.messageID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аauthor: event.senderID,

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а┬аlnk: a

┬а┬а┬а┬а┬а┬а┬а┬а┬а┬а});

┬а┬а┬а┬а┬а┬а┬а┬а}, event.messageID,

┬а┬а┬а┬а┬а┬а)}

}catch(err){

┬а┬а┬а┬аreturn api.sendMessage(`Error: ${err.message}`, event.threadID, event.messageID);

}};
